class M : Kk
{
    public Hh G()
    {
        Hh h;

        h ← global Hh;



        Int color;

        color ← h.L.Color;


        return h;
    }



    private Bool A()
    {
        Int d;

        d ← this.G().L.Color;
    }





    private Int O
    {
        get
        {
            Console k;


            k ← global Console;


            k.Write("M.O Field Get DEMO\n");



            String s;

            s ← this.F();


            k.Write(s);




            this.Gg();





            return data;
        }
        set
        {
            data ← value;
        }
    }



    private Bool Gg()
    {
        Console console;


        console ← global Console;




        Memory memory;


        memory ← new Memory;


        memory.Init();





        Int j;


        j ← 2;



        Int d;


        d ← memory.Alloc(j);




        memory.Data ← d;




        memory.SetByte(0, 65);



        memory.SetByte(1, 10);




        String s;


        s ← new String;


        s.Init();


        s.Length ← j;


        s.Data ← d;




        Int count;


        count ← 3;



        Int i;

        i ← 0;



        while (i < count)
        {
            console.Write(s);



            i ← i + 1;
        }


        




        s.Final();


        delete s;




        memory.Free(d);



        memory.Final();



        delete memory;



        console.Write("UU\n");
    }




    public Bool Main(String arg)
    {
        Console console;


        console ← global Console;



        console.Write(arg);



        console.Write("\n");




        this.FormatK();




        this.DemoDerive();




        return true;
    }






    private Bool DemoDerive()
    {
        String s;


        s ← this.F();



        Console console;


        console ← global Console;


        console.Write("DEMO DERIVE\n");


        console.Write(s);



        return true;
    }





    private Bool FormatK()
    {
        Format format;


        format ← global Format;




        String baseString;

        baseString ← "HELLO FORMAT\n";




        String resultString;


        resultString ← new String;


        resultString.Init();




        format.Base ← baseString;



        format.String ← resultString;



        format.ArgCount ← 2;



        format.Open();




        FormatArg arg;

        arg ← format.Arg(0);



        arg.Index ← 6;


        arg.Type ← 0;


        arg.Value ← 1;



        arg ← format.Arg(1);


        arg.Index ← 12;


        arg.Type ← 1;


        arg.Value ← 4023;
        



        Int totalLength;


        totalLength ← format.Length();




        Memory memory;

        memory ← global Memory;



        Int d;

        d ← memory.Alloc(totalLength);



        resultString.Length ← totalLength;


        resultString.Data ← d;





        format.Result();        



        format.Close();




        Console console;


        console ← global Console;



        console.Write(resultString);





        resultString.Length ← 0;

        resultString.Data ← 0;



        memory.Free(d);






        resultString.Final();


        delete resultString;




        return true;
    }






    private Bool J
    {
        get
        {
            return data;
        }
        set
        {
            data ← value;
        }
    }






    public String F()
    {
        return "MMMM\n";
    }
}